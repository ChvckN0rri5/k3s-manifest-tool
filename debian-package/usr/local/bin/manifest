#!/bin/bash

# Source the .env file
if [ -f /etc/manifest.env ]; then
    . /etc/manifest.env
else
    echo "Error: /etc/manifest.env not found"
    exit 1
fi

# Check if K3S_MANIFEST_PATH is set
if [ -z "$K3S_MANIFEST_PATH" ]; then
    echo "Error: K3S_MANIFEST_PATH not set in /etc/manifest.env"
    exit 1
fi

# Check if the target directory exists
if [ ! -d "$K3S_MANIFEST_PATH" ]; then
    echo "Error: Target directory $K3S_MANIFEST_PATH does not exist"
    exit 1
fi

# Check for dialog and prompt to install if missing
if ! command -v dialog > /dev/null; then
    echo "dialog is not installed. Do you want to install it? (y/n)"
    read -r answer
    if [ "$answer" = "y" ]; then
        sudo apt-get install -y dialog
        if ! command -v dialog > /dev/null; then
            echo "Failed to install dialog"
            exit 1
        fi
    else
        echo "dialog is required for this script"
        exit 1
    fi
fi

# Function to refresh the cache
refresh_cache() {
    sudo ls -1 "$K3S_MANIFEST_PATH" > /tmp/manifest_files_cache
    sudo chmod 644 /tmp/manifest_files_cache
    sudo chown root:root /tmp/manifest_files_cache
}

# Function to reset terminal
reset_terminal() {
    clear
    tput reset
}

# Handle --refresh-cache option
if [ "$1" = "--refresh-cache" ]; then
    refresh_cache
    echo "Cache refreshed"
    exit 0
fi

# Handle -c or --config option
if [ "$1" = "-c" ] || [ "$1" = "--config" ]; then
    sudo $TEXT_EDITOR /etc/manifest.env
    exit 0
fi

if [ "$1" = "edit" ]; then
    if [ -z "$2" ]; then
        # List files and let user choose one to edit
        files=($(sudo find "$K3S_MANIFEST_PATH" -maxdepth 1 -type f -printf "%f\n"))
        if [ ${#files[@]} -eq 0 ]; then
            dialog --msgbox "No files in $K3S_MANIFEST_PATH" 8 40
            reset_terminal
            exit 0
        fi
        menu_items=()
        for file in "${files[@]}"; do
            menu_items+=("$file" "$file")
        done
        selected_file=$(dialog --menu "Select a file to edit:" 15 50 10 "${menu_items[@]}" 2>&1 >/dev/tty)
        reset_terminal
        if [ -z "$selected_file" ]; then
            echo "No file selected"
            exit 0
        fi
        sudo $TEXT_EDITOR  "$K3S_MANIFEST_PATH/$selected_file"
        refresh_cache
    else
        # Edit the specified file
        if [ -f "$K3S_MANIFEST_PATH/$2" ]; then
            sudo $TEXT_EDITOR "$K3S_MANIFEST_PATH/$2"
            refresh_cache
        else
            echo "File $K3S_MANIFEST_PATH/$2 does not exist"
            exit 1
        fi
    fi
elif [ $# -eq 1 ]; then
    # Move the file
    source_file="$1"
    if [ ! -f "$source_file" ]; then
        echo "Error: $source_file does not exist"
        exit 1
    fi
    while true; do
        target_file="${K3S_MANIFEST_PATH}/$(basename "$source_file")"
        if [ -f "$target_file" ]; then
            dialog --defaultno --yesno "File $target_file already exists. Edit it with sudo nano?" 8 60
            response=$?
            reset_terminal
            if [ $response -eq 0 ]; then
                sudo $TEXT_EDITOR "$target_file"
                refresh_cache
                exit 0
            else
                dialog --defaultno --yesno "Rename $source_file and try again?" 8 60
                response=$?
                reset_terminal
                if [ $response -eq 0 ]; then
                    new_name=$(dialog --inputbox "Enter new name for $source_file:" 8 40 2>&1 >/dev/tty)
                    reset_terminal
                    if [ -z "$new_name" ]; then
                        echo "No new name provided, exiting"
                        exit 1
                    fi
                    mv "$source_file" "$new_name"
                    source_file="$new_name"
                else
                    echo "The source file $source_file is still intact and hasn't been touched."
                    exit 0
                fi
            fi
        else
            sudo mv "$source_file" "$target_file"
            if [ $? -eq 0 ]; then
                echo "File moved successfully to $target_file"
                refresh_cache
                exit 0
            else
                echo "Error moving file"
                exit 1
            fi
        fi
    done
else
    echo "Usage: manifest [edit [filename] | <filename> | --refresh-cache | -c | --config]"
    exit 1
fi
